<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /H8+fb9t8/maoQAAAABJRU5ErkJggg==
</value>
  </data>
</root>